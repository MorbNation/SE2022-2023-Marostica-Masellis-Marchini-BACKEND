swagger: '2.0'
info:
  version: 1.0.0
  title: EpiOpera API Documentation
  description: EpiOpera API Documentation
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
host: localhost:8080
basepath: /
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /user:
    get:
      tags:
        - Users
      summary: Get all users in system
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
    post:
      tags:
        - Users
      summary: Post a new user
      parameters:
        - name: body
          in: body
          description: Body of user post API
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid input
        '500':
          description: Internal server error
  /user/{username}:
    delete:
      tags:
        - Users
      summary: Deletes a user by username
      parameters:
        - name: username
          in: path
          description: Username of user to delete
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid username
        '404':
          description: User not found
  /post:
    get:
      tags:
        - Posts
      summary: Get all posts in system
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Post'
    post:
      tags:
        - Posts
      summary: Post a new user
      parameters:
        - name: body
          in: body
          description: Body of post post API
          required: true
          schema:
            $ref: '#/definitions/Post'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Post'
        '400':
          description: Invalid input
        '500':
          description: Internal server error
  /post/{id}:
    delete:
      tags:
        - Posts
      summary: Deletes a post by id
      parameters:
        - name: id
          in: path
          description: Id of post to delete
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid post id
        '404':
          description: Post not found
  /comment:
    post:
      tags:
        - Comments
      summary: Post a new comment
      parameters:
        - name: body
          in: body
          description: Body of comment post API
          required: true
          schema:
            $ref: '#/definitions/Comment'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Comment'
        '400':
          description: Invalid input
        '500':
          description: Internal server error
  /comment/{assoc_id}:
    get:
      tags:
        - Comments
      summary: Get comments by association Id
      parameters:
        - name: assoc_id
          in: path
          description: Association Id of comment to get
          required: true
          schema:
            type: number
      responses:
        '400':
          description: Invalid association id
        '404':
          description: Comment not found
  /comment/{id}:
    delete:
      tags:
        - Comments
      summary: Deletes a comment by id
      parameters:
        - name: id
          in: path
          description: Id of comment to delete
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid comment id
        '404':
          description: Comment not found
definitions:
  User:
    required:
      - username
    properties:
      username:
        type: string
      email:
        type: string
        example: user@something.domain
      psw:
        type: string
      nsfwIconFlag:
        type: boolean
        default: false
      nsfwBannerFlag:
        type: boolean
        default: false
      lingua:
        type: string
        enum:
          - italiano
          - inglese
      nsfwSetting:
        type: string
        enum:
          - 'no'
          - blur
          - 'yes'
      followed_users:
        type: array
        items:
          type: number
      favourites:
        type: array
        items:
          type: number
  Post:
    required:
      - id
    properties:
      id:
        type: number
      title:
        type: string
      date:
        type: string
      text:
        type: string
      media:
        type: string
      tag:
        type: array
        items:
          type: string
      punteggio_post:
        type: number
        default: 0
      segnalato:
        type: boolean
        default: 0
      numero_commenti:
        type: number
        default: 0
      associato_a_contest:
        type: array
        items:
          type: number
      creatore_post:
        type: string
  Comment:
    required:
      - id
    properties:
      id:
        type: number
      assoc_id:
        type: number
      data:
        type: string
      text:
        type: string
      punteggio:
        type: number
        default: 0
      segnalato:
        type: boolean
        default: false
      creatore_commento:
        type: string
