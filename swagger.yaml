#OH GOD SI POSSONO METTERE I COMMENTI SU YAML
swagger: '2.0'
info:
  version: 1.0.0
  title: EpiOpera API Documentation
  description: EpiOpera API Documentation
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
host: localhost:8080
basepath: /
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json

##Tags

tags: 
  - name: Utenti
    description: APIs for the Utente class
  - name: Post
    description: APIs for the Post class
  - name: Commenti Post
    description: APIs for the Commento_Post class
  - name: Commenti Profilo
    description: APIs for the Commento_Profilo class
  - name: Demo
    description: Demo APIs

##APIs begin

paths:

#Utente APIs begin

  /utente:

    get:
      tags:
        - Utenti
      summary: Retrieves all users registered on the database
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Utente'

    post:
      tags:
        - Utenti
      summary: Register a new user in the database
      parameters:
        - name: body
          in: body
          description: Attributes of the new user to be registered
          required: true
          schema:
            $ref: '#/definitions/Utente'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Utente'
        '400':
          description: Invalid input
        '500':
          description: Internal server error

  /utente/{username}:

    delete:
      tags:
        - Utenti
      summary: Deletes a user from the database by username
      parameters:
        - name: username
          in: path
          description: The username of the user to delete
          required: true
          schema:
            type: string
        - name: x-access-token
          in: header
          description: The authentication token
          required: true
          schema: 
            type: string
      responses:
        '400':
          description: Invalid username
        '403':
          description: Forbidden
        '404':
          description: User not found

#Utente APIs end

#Post APIs begin

  /posts:

    get:
      tags:
        - Post
      summary: Retrives all posts in the database
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Post'

  /post/id/{id}:

    get:
      tags: 
        - Post
      summary: Retrieves a post by its Id
      parameters:
        - name: id
          in: path
          description: The id of the post to retrieve
          schema:
            type: number
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Post'

  /post/user/{username}:

    get: 
      tags:
        - Post
      summary: Retrieves all posts posted by a user
      parameters: 
        - name: username
          in: path
          description: The username of the post's author
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Post'

  /post/segnala/{id}:

    put:
      tags:
        - Post
      summary: Flags a post
      parameters:
        - name: id
          in: path
          description: The id of post to flag
          required: true
          schema:
            type: number
        - name: x-access-token
          in: header
          description: The authentication token
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: OK
          schema: 
            $ref: '#/definitions/Post'
        '400':
          description: Invalid input
        '403': 
          description: Forbidden
        '500':
          description: Internal server error

  /post/valuta: 

    put:
      tags:
        - Post
      summary: Increments or decrements a post's score
      description: The function requires the id of the post to be evaluated, the username of the user evaluating the post and the vote (-1, 0, 1)
      parameters:
        - name: body
          in: body
          description: Attributes of the evaluation function
          required: true
          schema:
            properties:
              id: 
                type: number
              username: 
                type: string
              valutazione:
                type: number
        - name: x-access-token
          in: header
          description: The authentication token
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Post'
        '400':
          description: Invalid input
        '403': 
          description: Forbidden
        '500':
          description: Internal server error

  /post/modifica:

    put:
      tags:
        - Post
      summary: Edits a post
      parameters:
        - name: body
          in: body
          description: Modifiable attributes of a post
          required: true
          schema:
            properties: 
              id: 
                type: number
              username:
                type: string
              titolo:
                type: string
              testo:
                type: string
              media:
                type: string
              tag:
                type: array
                items:
                  type: string
        - name: x-access-token
          in: header
          description: The authentication token
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Post'
        '400':
          description: Invalid input
        '403':
          description: Forbidden
        '500':
          description: Internal server error

  /post/salvaNeiFavoriti:

    put:
      tags:
        - Post
      summary: Saves a post in a user's favourites
      description: A post's editable attributes are the username of the poster, the title, the text, the media and tags
      parameters:
        - name: body
          in: body
          description: Atrributes of the function
          required: true
          schema:
            properties:
              id: 
                type: number
              username: 
                type: string
        - name: x-access-token
          in: header
          description: The authentication token
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Post'
        '400':
          description: Invalid input
        '403':
          description: Forbidden
        '500':
          description: Internal server error

  /post:

    post:
      tags:
        - Post
      summary: Uploads a new post to the database 
      parameters:
        - name: body
          in: body
          description: Attributes of the new post to be uploaded
          required: true
          schema:
            $ref: '#/definitions/Post'
        - name: x-access-token
          in: header
          description: The authentication token
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Post'
        '400':
          description: Invalid input
        '403':
          description: Forbidden
        '500':
          description: Internal server error

  /post/{id}:

    delete:
      tags:
        - Post
      summary: Deletes a post by its id
      parameters:
        - name: id
          in: path
          description: The id of post to delete
          required: true
          schema:
            type: string
        - name: x-access-token
          in: header
          description: The authentication token
          required: true
          schema: 
            type: string
      responses:
        '400':
          description: Invalid post id
        '403':
          description: Forbidden
        '404':
          description: Post not found

#Post APIs end

#Commento_Post APIs begin

  /commento_post:

    post:
      tags:
        - Commenti Post
      summary: Post a new post comment
      parameters:
        - name: body
          in: body
          description: Body of post comment post API
          required: true
          schema:
            $ref: '#/definitions/Commento_Post'
        - name: x-access-token
          in: header
          description: The authentication token
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Commento_Post'
        '400':
          description: Invalid input
        '403': 
          description: Forbidden
        '500':
          description: Internal server error

  /commento_post/{id_post}:

    get:
      tags:
        - Commenti Post
      summary: Get post comments by association Id
      parameters:
        - name: id_post
          in: path
          description: Association Id of post comment to get
          required: true
          schema:
            type: number
      responses:
        '400':
          description: Invalid association id
        '404':
          description: Comment not found

  /commento_post/{id}:

    delete:
      tags:
        - Commenti Post
      summary: Deletes a post comment by id
      parameters:
        - name: id
          in: path
          description: Id of post comment to delete
          required: true
          schema:
            type: string
        - name: x-access-token
          in: header
          description: The authentication token
          required: true
          schema: 
            type: string
      responses:
        '400':
          description: Invalid comment id
        '403':
          description: Forbidden
        '404':
          description: Comment not found

  /commento_post/segnala/{id}:
    put:  
      tags: 
        - Commenti Post
      summary: Flags a post comment
      parameters: 
        - name: id
          in: path
          description: The id of the post comment to flag
          required: true
          schema:
            type: number
        - name: x-access-token
          in: header
          description: The authentication token
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: OK
          schema: 
            $ref: '#/definitions/Commento_Post'
        '400':
          description: Invalid input
        '403': 
          description: Forbidden
        '500':
          description: Internal server error

  /commento_post/valuta:
    put:
      tags:
        - Commenti Post
      summary: Increments or decrements a post comment's score
      description: The function requires the id of the comment to be evaluated, the username of the user evaluating the comment and the vote (-1, 0, 1)
      parameters:
        - name: body
          in: body
          description: Attributes of the evaluation function
          required: true
          schema:
            properties:
              id: 
                type: number
              username: 
                type: string
              valutazione:
                type: number
        - name: x-access-token
          in: header
          description: The authentication token
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Commento_Post'
        '400':
          description: Invalid input
        '403': 
          description: Forbidden
        '500':
          description: Internal server error

#Commento_Post APIs end

#Commento_Profilo APIs begin

  /commento_profilo:

    post: 
      tags:
        - Commenti Profilo
      summary: Uploads a new post comment on the database
      parameters:
        - name: body
          in: body
          description: Attributes of the new post comment to be uploaded
          required: true
          schema:
            $ref: '#/definitions/Commento_Profilo'
        - name: x-access-token
          in: header
          description: The authentication token
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Commento_Profilo'
        '400':
          description: Invalid input
        '403':
          description: Forbidden
        '500':
          description: Internal server error

  /commento_profilo/{profilo_commentato}:

    get:
      tags:
        - Commenti Profilo
      summary: Retrieves all comments on the database relating to a specific profile
      parameters:
        - name: profilo_commentato
          in: path
          description: The name of commented profile
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid profile name
        '404':
          description: Profile not found

  /commento_profilo/{id}:

    delete:
      tags:
        - Commenti Profilo
      summary: Deletes a profile comment by its id
      parameters:
        - name: id
          in: path
          description: The id of the profile comment to be deleted
          required: true
          schema:
            type: number
        - name: x-access-token
          in: header
          description: The authentication token
          required: true
          schema: 
            type: string
      responses:
        '400':
          description: Invalid comment Id
        '403':
          description: Frobidden
        '404': 
          description: Comment not found

#Commento_Profilo APIs end

##APIs end

##Definitions begin

definitions:
  Utente:
    required:
      - username
    properties:
      username:
        type: string
      email:
        type: string
        example: user@something.domain
      password:
        type: string
      iconaNSFW:
        type: boolean
        default: false
      bannerNSFW:
        type: boolean
        default: false
      lingua:
        type: string
        enum:
          - italiano
          - inglese
      nsfw:
        type: string
        enum:
          - 'no'
          - blur
          - 'yes'
      utenti_seguiti:
        type: array
        items:
          type: number
      post_favoriti:
        type: array
        items:
          type: number

  Post:
    required:
      - id
    properties:
      id:
        type: number
      titolo:
        type: string
      data:
        type: string
      testo:
        type: string
      media:
        type: string
      tag:
        type: array
        items:
          type: string
      punteggio_post:
        type: number
        default: 0
      segnalato:
        type: boolean
        default: false
      numero_commenti:
        type: number
        default: 0
      associato_a_contest:
        type: array
        items:
          type: number
      creatore_post:
        type: string

  Commento_Post:
    required:
      - id
    properties:
      id:
        type: number
      id_post:
        type: number
      data:
        type: string
      testo:
        type: string
      punteggio_commento:
        type: number
        default: 0
      segnalato:
        type: boolean
        default: false
      creatore_commento:
        type: string

  Commento_Profilo:
    required:
      - id
    properties:
      id:
        type: number
      profilo_commentato:
        type: string
      titolo:
        type: string
      data:
        type: string
      testo: 
        type: string
      punteggio_commento:
        type: number
        default: 0
      segnalato:
        type: boolean
        default: false
      creatore_commento:  
        type: string

  Valutazione:
    required:
      - id
        username
        valutazione
    properties:
      id:
        type: number
      username:
        type: string
      valutazione:
        type: number

##Definitions end